name: Destroy Infrastructure

on:
  workflow_dispatch:
env:
  TERRAFORM_WORKING_DIR: terraform
  TF_VAR_environment: ${{ vars.ENVIRONMENT }}
  TF_VAR_aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  TF_VAR_aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_aws_session_token: ${{ secrets.AWS_SESSION_TOKEN }}
  TF_VAR_aws_region: ${{ vars.AWS_REGION }}
  TF_VAR_role_arn: ${{ secrets.AWS_ROLE_ARN }}
  TF_VAR_repository: ${{ github.event.repository.name }}
jobs:
  terraform-destroy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ vars.AWS_REGION }}
      - name: Terraform Init
        run: terraform init
        working-directory: ${{ env.TERRAFORM_WORKING_DIR }}
      - name: Terraform Destroy
        run: terraform destroy -auto-approve
        working-directory: ${{ env.TERRAFORM_WORKING_DIR }}
      - name: Delete node group
        run: >
          aws eks delete-nodegroup \
              --nodegroup-name node_group \
              --cluster-name AWSEKSCluster \
              --region ${{ vars.AWS_REGION }}
      - name: Wait for node group deletion
        run: .github/scripts/wait_for_nodegroup_deletion.sh node_group AWSEKSCluster ${{ vars.AWS_REGION }}
      - name: Delete cluster
        run: >
          aws eks delete-cluster \
              --name AWSEKSCluster \
              --region ${{ vars.AWS_REGION }}
      - name: Empty and delete ECR repository
        run: >
          .github/scripts/empty_ecr_repository.sh ${{ env.TF_VAR_repository }}
          aws ecr delete-repository --repository-name ${{ env.TF_VAR_repository }}
      - name: Delete load balancer
        run: aws elb delete-load-balancer --load-balancer-name $(.github/scripts/get_load_balancer_name.sh ${{ env.TF_VAR_repository }}-service)
